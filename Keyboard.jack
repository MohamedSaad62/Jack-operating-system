// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
		return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		var int c;
		let c =  Memory.peek(24576);
		return c;
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
		var char c; 
		while(Keyboard.keyPressed() = 0){
		}
		let c = Memory.peek(24576);
		while(~(Keyboard.keyPressed() = 0)){
		}
		do Output.printChar(c);
		return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
		var int it, c;
		var String s;
		let s = String.new(64);
		do Output.printString(message);
		let it = 64;
		while(it > 0){
			let c = Keyboard.readChar();
			if (c = 128){
				return s;
			}
			if (c = 129){
				do s.eraseLastChar();
			}
			else {
				let s = s.appendChar(c);
				
			}
			let it = it - 1;
		}
		return s;
    }   
	
	function String readLine1() {
		var int it, c;
		var String s;
		let s = String.new(64);
		let it = 64;
		while(it > 0){
			let c = Keyboard.readChar();
			if (c = 128){
				return s;
			}
				if (c = 129){
					do s.eraseLastChar();
				}
				else{
					let s = s.appendChar(c);
				}
			
			let it = it - 1;
		}
		return s;
    }   
    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
		var int  sign, ret, constant, end, len;
		var String s;
		do Output.printString(message);
		let s = Keyboard.readLine1();
		let len = s.length();
		let constant = 1;
		let ret = 0;
		if(s.charAt(0) = 45){
			let sign = -1;
			let end = 0;
		}
		else {
			let sign = 1;
			let end = -1;
		}
		let len = len - 1;
		while(len > end){
			
			let ret = ret + (constant * (s.charAt(len) - 48));
			let len = len - 1;
			let constant = constant * 10;
		}
		
		
		return ret * sign;
    }
}
